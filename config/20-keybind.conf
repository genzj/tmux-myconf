# vim: foldmethod=marker:foldenable

### Key Binds {{{
# Set the prefix to ^A.
unbind C-b
set -g prefix ^A
# Let tmux-sensible handle it
# bind a send-prefix
# unbind ^A
# bind ^A last-window


# Bind appropriate commands similar to screen.
# lockscreen ^X x
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server

# screen ^C c
unbind ^C
bind ^C new-window -c "#{pane_current_path}"
unbind c
bind c new-window -c "#{pane_current_path}"

# detach ^D d
unbind ^d
bind ^d detach

# displays *
unbind *
bind * list-clients

# next ^@ ^N sp n
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window \"%%\""

# prev ^H ^P p ^?
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows ^W w
unbind ^W
bind ^W choose-window
unbind w
bind w choose-window
unbind '"'
bind '"' choose-window

# redisplay l
unbind l
bind l refresh-client

# Enter copy-mode: an alias of "prefix [" but don't have to lift finger from
# Ctrl after pressing the prefix which is C-a
# Note: C-[ actually sends the Escape which resets the prefix state, so the
# Escape must be bind to copy-mode. No harm to bind C-[ although it seems
# unnecessary.
unbind ^[
bind ^[ copy-mode
unbind Escape
bind Escape copy-mode

# Simulate vim by using 'v' to start selection
unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi v send-keys -X begin-selection


#### Pane-control Key Binds {{{
# Ref: https://github.com/tmux-plugins/tmux-pain-control


##### Pane navigation bindings {{{
unbind C-h
bind-key C-h select-pane -L
unbind C-j
bind-key C-j select-pane -D
unbind C-k
bind-key C-k select-pane -U
unbind C-l
bind-key C-l select-pane -R

# :kB: focus up
unbind Tab
bind Tab select-pane -t:.+
unbind BTab
bind BTab select-pane -t:.-

# }}}

##### Pane creation bindings {{{
# split -v | or \
unbind |
bind | split-window -h -c "#{pane_current_path}"
unbind '\'
bind '\' split-window -h -c "#{pane_current_path}"

# split -h s
unbind s
bind s split-window -v -c "#{pane_current_path}"
unbind _
bind _ split-window -v -c "#{pane_current_path}"
unbind -
bind - split-window -v -c "#{pane_current_path}"
# }}}

# quit q
# quit/kill current pane, also kill window
# if current pane is the last one
unbind C-q
bind C-q confirm-before "kill-pane"

# }}}

# }}}
